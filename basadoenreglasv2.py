# -*- coding: utf-8 -*-
"""BasadoEnREglasV2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CW7MNXIJB2nLS-s0FquNo4JrKvHutlH6
"""

#Se importa para el manejo de colas
from collections import deque

#Diccionario de rutas
def transporte_reglas():
    reglas_rutas = {
        "A": ["D", "C"],
        "B": ["D", "E"],
        "C": ["D", "A"],
        "D": ["E"]
    }
    return reglas_rutas

def mejor_ruta_moverse(puntoIni, puntoFin):
    #Rutas definidas
    reglasRutas = transporte_reglas()
    #Se inicia la cola con el punto inicial
    cola = deque([[puntoIni]])
    #Se declara una variable que sirve como bandera para evitar recorrer dos veces el mismo lugar
    recorrido = set()
    #Se inicia un bucle con la cola, son las rutas a buscar.
    while cola:
        #Primer camino de la cola
        ruta = cola.popleft()
        # Se saca el camino del arreglo
        camino = ruta[-1]
        #Si se encuentra la ruta, se devuelve el valor
        if camino == puntoFin:
            return ruta
        #Realizamos una validación para no recorrer lugares ya encontrados
        if camino not in recorrido:
            recorrido.add(camino)
            #Se recorren los caminos para saber si la ruta puede estar dentro de otro arreglo.
            for rutaRegla in reglasRutas.get(camino, []):
              #Por último, se trabaja en copiar la ruta actual y se agrega a la nueva ruta sugerida.
                rutaSugerida = list(camino)
                rutaSugerida.append(rutaRegla)
                cola.append(rutaSugerida)
    return None

puntoIni, puntoFin  = "A", "E"
mejoresRutas = mejor_ruta_moverse(puntoIni, puntoFin)
if mejoresRutas:
    print(f"La mejor ruta para moverse de  {puntoIni} a {puntoFin}: {' -> '.join(mejoresRutas)}")
else:
    print("No hay ruta disponible.")